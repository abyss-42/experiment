#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int Input(char name[][30], int score[][30] , int * a , int id[]);
void Output(int id[] , int score[][30] , int num , char name[][30] , int numofexam , double a[] , double b[]);
void Sum_avgofstu(int id[],int score[][30] ,int num ,int numofexam, double a[] , double b[]);
void Sum_avgofsub(int id[],int score[][30] ,int num ,int numofexam );
void Printlist(int id[],int score[][30] , int (*compare)(int a , int b) , int num , char name[][30] ,int numofexam , double a[]);
void Dict(int id[],char name[][30], int score[][30],int (*compare)(int a , int b) , int num);
void Search_by_id(int id[],int score[][30] , int num , char name[][30] ,int numofexam , double a[]);
void Search_by_name(int id[],char name[][30] , int score[][30] , int num ,int numofexam , double a[]);
void Analysis(int id[],int score[][30] , int num , int numofexam);
int Descending(int a , int b);
int Ascending(int a , int b);
void Print_by_name(int id[],char name[][30] , int score[][30] , int num ,int numofexam , double a[] , double b[]);
void Sort(int id[],char name[][30] , int score[][30] , int num, int numofexam , double a[]);
void Printlist2(int id[],int score[][30], int (*compare)(int a , int b ) , int num , char name[][30],double a[] , double b[] , int numofexam);

int main()
{
    printf("Number : 200111419\n");
    printf("Name:李泽诚 \n");
    printf("Subject No.7- program No.1\n");
    char name[30][30];
    int score[30][30];
    int id[30];
    double sum[30] , avg[30];
    int choice , numofstu , numofexam;
    int flag = 0;

    printf("1. Input record\n");
    printf("2. Calculate total and average score of every course\n");
    printf("3. Calculate total and average score of every student\n");
    printf("4. Sort in descending order by total score of every student\n");
    printf("5. Sort in ascending order by total score of every student\n");
    printf("6. Sort in ascending order by number\n");
    printf("7. Sort in dictionary order by name\n");
    printf("8. Search by number\n");
    printf("9. Search by name\n");
    printf("10.Statistic analysis for every course\n");
    printf("11.List record\n");
    printf("0. Exit\n");
    printf("Please enter your choice:\n");


    do{
         if(choice == 1){
            numofstu = Input(name , score , &numofexam , id);
            flag = 1;
        }
         if(choice == 2){
            if(!flag) printf("please input record first");
            else{
                Sum_avgofsub(id ,score , numofstu ,numofexam);
            }
        }
         if(choice == 3){
            if(!flag) printf("please input record first");
            else{
                Sum_avgofstu(id ,score , numofstu , numofexam , sum ,avg);
            }
        }
         if(choice == 4){
            if(!flag) printf("please input record first");
            else{
                Printlist(id ,score , Descending , numofstu , name , numofexam , sum);//need to calculate sum first
            }
        }
         if(choice == 5){
            if(!flag) printf("please input record first");
            else{
                Printlist(id ,score , Ascending , numofstu ,name , numofexam , sum);
            }
        }
         if(choice == 6){
            if(!flag) printf("please input record first");
            else{
                Printlist2(id ,score, Ascending , numofstu , name, sum , avg , numofexam);
            }
        }
         if(choice == 7){
           if(!flag) printf("please input record first");
            else{
                Print_by_name(id ,name , score , numofstu , numofexam , sum , avg);
            }
        }
         if(choice == 8){
           if(!flag) printf("please input record first");
            else{
                Search_by_id(id ,score , numofstu , name  , numofexam , sum);
            }
        }
         if(choice == 9){
            if(!flag) printf("please input record first");
            else
               Search_by_name(id ,name ,score , numofstu , numofexam , sum);
            }

         if(choice == 10){
            if(!flag) printf("please input record first");
            else{
                Analysis(id ,score , numofstu , numofexam);
            }
        }
         if(choice == 11){
            if(!flag) printf("please input record first");
            else{
                Output(id ,score , numofstu , name ,numofexam , sum ,avg );
            }
        }
         if(choice == 0){
            break;
        }

    }while( scanf("%d" , &choice));
}

int Input(char name[][30] , int score[][30] , int * a , int id[]){
    int num,ret1,ret2;
    int numofexam;
    printf("Input number of students\n");
    ret1 = scanf("%d" , &num );
    printf("Input number of exams\n");
    ret2 = scanf("%d" , &numofexam );
    if(ret1 && ret2){
        printf("Input name,student ID and score\n");
        for (int i=0 ; i < num ; i++){
            scanf("%s" , name[i]);
            scanf("%d", &id[i]);
            for (int j = 0 ; j < numofexam ; j++){
                scanf("%d", &score[i][j]);
            }

        }
        * a = numofexam;
        printf("Input finished\n");
        return num;
    }
    else {
            printf("Input error,please input anain\n");
             return 0;
    }

}

void Sum_avgofsub(int id[],int score[][30] , int num ,int numofexam){
    double sum , avg;
    for(int i = 0 ; i < numofexam ; i++){
        for (int j =  0 ; j < num ; j++){
            sum += (double)score[j][i];
        }
        avg = sum/(double)num;
        printf("subject%d\t" , i + 1);
        printf("sum = %lf\t" , sum);
        printf("avg = %lf\n" , avg);
        sum = avg = 0;
    }

}
void Sum_avgofstu(int id[],int score[][30] , int num ,int numofexam , double a[] , double b[]){
    double sum = 0 , avg;
    for(int i = 0 ; i < num ; i++){
        for(int j = 0 ; j < numofexam ; j++){
            sum += (double)score[i][j];
        }
        avg = sum/(double)numofexam;
        a[i] = sum;
        b[i] = avg;
        printf("%d\t" , id[i]);
        printf("sum = %lf\t" , sum);
        printf("avg = %lf\n" , avg);
        sum = avg = 0;
    }
}

void Printlist(int id[],int score[][30], int (*compare)(int x , int y ) , int num ,char name[][30] ,int numofexam , double a[]){
    int temp;
    char tem[30];

    double sum = 0;
    for(int i = 0 ; i < num ; i++){
        for(int j = 0 ; j < numofexam ; j++){
            sum += (double)score[i][j];
        }
        a[i] = sum;
        sum = 0;
    }

    for(int i = 0 ; i < num - 1 ; i++){
        for(int j = 0 ; j < num - 1 ; j++){
            if(compare(a[j] , a[j+1])){

                for(int k = 0 ; k < numofexam ; k++){
                    temp =  score[j][k];
                    score[j][k] = score[j + 1][k];
                    score[j + 1][k] = temp;
                }
                temp = id[j];
                id[j] = id[j + 1];
                id[j + 1] = temp;
                strcpy(tem , name[j]);
                strcpy(name[j], name[j + 1]);
                strcpy(name[j + 1], tem);
            }
        }
    }
    for(int i = 0 ; i < num ; i++){
        printf("%d\t%s\n" , id[i] , name[i]);
    }
}

void Search_by_id(int id[],int score[][30] , int num , char name[][30] , int numofexam , double a[]){
    int ID;
    int aa = 1;
    printf("input ID\n");
    scanf ("%d" , &ID);
    Sort(id ,name, score, num ,numofexam , a);
    for(int i = 0 ; i < num ; i++){
        if(ID == id[i]){
                printf("%d\t" ,i + 1 );
                for (int j = 0 ; j < numofexam ; j++){
                    printf("%d\t" ,score[i][j]);
                }
            }
            aa = 0;
        }
    if(aa)printf("Can't find this student\n");
}

int Ascending(int a , int b){
    return a > b;
}


int Descending(int a , int b){
    return a < b;
}

void Search_by_name(int id[],char name[][30] ,int score[][30] , int num , int numofexam , double a[]){
    int aa = 1;
    char n[30];
    printf("Please input the name\n");
    scanf("%s" , n);
    Sort(id ,name, score, num ,numofexam , a);
    for(int i = 0 ; i < num ; i++){
        if(! strcmp(n , name[i])){
                printf("%d\t" ,i + 1 );
                for (int j = 0 ; j < numofexam ; j++){
                    printf("%d\t" ,score[i][j]);
                }
            }
            aa = 0;
        }
    if(aa)printf("Can't find this student\n");
}

void Print_by_name(int id[],char name[][30] , int score[][30] , int num , int numofexam , double a[] , double b[]){
    char tem[30];
    int temp;
    for(int i = 0 ; i < num - 1 ; i++){
        for(int j = 0 ; j < num - 1 ; j++){
            if(strcmp(name[j], name[j+1]) > 0){
                for(int k = 0 ; k < numofexam ; k++){
                    temp =  score[j][k];
                    score[j][k] = score[j + 1][k];
                    score[j + 1][k] = temp;
                }
                temp = id[j];
                id[j] = id[j + 1];
                id[j + 1] = temp;
                strcpy(tem , name[j]);
                strcpy(name[j], name[j + 1]);
                strcpy(name[j + 1], tem);
            }
        }
    }
    for(int i = 0 ; i < num ; i++){
        printf("%d\t%s\n" , id[i] , name[i]);
        for (int j = 0 ; j < numofexam ; j++){
            printf("%d\t" ,score[i][j]);
        }
        printf("%lf\t%lf\n" , a[i] , b[i]);
    }
}

void Printlist2(int id[],int score[][30], int (*compare)(int a , int b ) , int num , char name[][30] , double a[] , double b[] , int numofexam){
    int temp;
    char tem[30];
    for(int i = 0 ; i < num - 1 ; i++){
        for(int j = 0 ; j < num - 1 ; j++){
            if(compare(id[j] , id[j+1])){
                for(int k = 0 ; k < numofexam ; k++){
                    temp =  score[j][k];
                    score[j][k] = score[j + 1][k];
                    score[j + 1][k] = temp;
                }
                temp = id[j];
                id[j] = id[j + 1];
                id[j + 1] = temp;
                strcpy(tem , name[j]);
                strcpy(name[j], name[j + 1]);
                strcpy(name[j + 1], tem);
            }
        }
    }
   for(int i = 0 ; i < num ; i++){
        printf("%d\t%s\n" , id[i] , name[i]);
        for (int j = 0 ; j < numofexam ; j++){
            printf("%d\t" ,score[i][j]);
        }
        printf("%lf\t%lf\n" , a[i] , b[i]);
    }
}

void Sort(int id[],char name[][30] , int score[][30] , int num , int numofexam , double a[]){
    int temp;
    char tem[30];
    for(int i = 0 ; i < num - 1 ; i++){
        for(int j = 0 ; j < num - 1 ; j++){
            if(a[j] < a[j+1]){

                for(int k = 0 ; k < numofexam ; k++){
                    temp =  score[j][k];
                    score[j][k] = score[j + 1][k];
                    score[j + 1][k] = temp;
                }
                temp = id[j];
                id[j] = id[j + 1];
                id[j + 1] = temp;
                strcpy(tem , name[j]);
                strcpy(name[j], name[j + 1]);
                strcpy(name[j + 1], tem);
            }
        }
    }

}


void Analysis(int id[],int score[][30] , int num , int numofexam){
    int a,b,c,d,e;
    a = b = c = d = e = 0;
    for(int j = 0 ; j < numofexam ; j++){
            for(int i = 0 ; i < num ; i++){
                if(score[i][j] >= 90 && score[i][j] <= 100)a++;
                if(score[i][j] >= 80 && score[i][j] <= 89)b++;
                if(score[i][j] >= 70 && score[i][j] <= 79)c++;
                if(score[i][j] >= 60 && score[i][j] <= 69)d++;
                if(score[i][j] >= 0 && score[i][j] <= 59)e++;
            }
            printf("subject:%d\n" , j);
            printf("优秀人数：%d\t占比：%lf%%\n" , a ,(double)a*100/(double)num);
            printf("良好人数：%d\t占比：%lf%%\n" , b ,(double)b*100/(double)num);
            printf("中等人数：%d\t占比：%lf%%\n" , c ,(double)c*100/(double)num);
            printf("及格人数：%d\t占比：%lf%%\n" , d ,(double)d*100/(double)num);
            printf("不及格人数：%d\t占比：%lf%%\n" , e ,(double)e*100/(double)num);
    }

}

void Output(int id[],int score[][30] , int num , char name[][30]  , int numofexam , double a[] , double b[]){
    for(int i = 0 ; i < num ; i++){
        printf("%d\t%s\n" , id[i] , name[i]);
        for (int j = 0 ; j < numofexam ; j++){
            printf("%d\t" ,score[i][j]);
        }
        printf("%lf\t%lf\n" , a[i] , b[i]);
    }
}
